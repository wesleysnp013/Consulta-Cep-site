{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","dados","setDados","cep","setCep","uf","setUf","cidade","setCidade","logradouro","setLogradouro","value","setValue","api","a","length","axios","get","response","data","alert","Boolean","className","class","placeholder","type","id","onChange","e","target","onKeyPress","key","onClick","window","location","reload","bairro","localidade","ddd","ibge","tabindex","scope","map","item","k","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6d8c0d5.chunk.js","sourcesContent":["import './App.css';\nimport axios from 'axios'\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n\n    const [dados, setDados] = useState('')\n    const [cep, setCep] = useState('')\n    const [uf, setUf] = useState('')\n    const [cidade, setCidade] = useState('')\n    const [logradouro, setLogradouro] = useState('')\n    const [value, setValue] = useState(false)\n\n    function handleCep(e) {\n        if (e.key === \"Enter\") {\n            api()\n        }\n    }\n    // async function api2() {\n\n    //     const response = await axios.get('http://localhost:3001/users')\n    //     console.log(response)\n    // }\n\n    async function api() {\n        try {\n            if (cep.length > 0) {\n\n                const response = await axios.get(`https://viacep.com.br/ws/${cep}/json/`)\n                setDados(response.data)\n\n            } else if (uf.length > 0 || cidade.length > 0 || logradouro.length > 0) {\n\n                const response = await axios.get(`https://viacep.com.br/ws/${uf}/${cidade}/${logradouro}/json/`)\n                if (response.data.length > 1) {\n                    setDados(response.data)\n                    setValue(response.data)\n                }\n            } else\n\n                alert('Error! Insira um CEP válido!!')\n        } catch (error) {\n            if (Boolean(uf) || Boolean(cidade) || logradouro.length > 0) {\n                alert('Falta informar a cidade e o estado!')\n            }\n        }\n    }\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"form\">\n                            <div className=\"form-control\">\n                                <h1 >Consultando CEP</h1>\n\n                                <form class=\"row g-3\">\n\n                                    <div class=\"col-auto\">\n                                        <input placeholder='CEP' type=\"text\" class=\"form-control form-control\" id=\"consulta\" value={dados.cep} onChange={(e) => { setCep(e.target.value) }} onKeyPress={handleCep} />\n                                    </div>\n\n                                    <div class=\"col-auto\">\n                                        <button type=\"button\" class=\"btn btn-primary\" onClick={api}>Consultar</button>\n\n                                    </div>\n\n                                    <div class=\"col-auto\">\n                                        <button type=\"button\" class=\"btn btn-secondary\" onClick={() => { window.location.reload() }} >Nova Consulta</button>\n                                    </div>\n\n                                    <div class=\"mb-3\">\n\n                                        <input onChange={(e) => { setLogradouro(e.target.value) }} placeholder='Endereço' value={dados.logradouro} class=\"form-control form-control\" />\n                                    </div>\n\n                                    <div class=\"mb-3\">\n                                        <input placeholder='Bairro' value={dados.bairro} class=\"form-control form-control\" />\n                                    </div>\n\n                                    <div class=\"mb-3\">\n                                        <input onChange={(e) => { setCidade(e.target.value) }} placeholder='Cidade' value={dados.localidade} class=\"form-control form-control \" />\n                                    </div>\n\n                                    <div class=\"mb-3\">\n                                        <input onChange={(e) => { setUf(e.target.value) }} placeholder='UF' value={dados.uf} class=\"form-control form-control \" />\n                                    </div>\n\n                                    <div class=\"mb-3\">\n                                        <input placeholder='DDD' value={dados.ddd} class=\"form-control form-control\" />\n                                    </div>\n\n                                    <div class=\"mb-3\">\n                                        <input placeholder='Codigo do IBGE' value={dados.ibge} class=\"form-control form-control\" />\n                                    </div>\n\n                                    {!value ? true : <button type=\"button\" class=\"btn-teste animate__animated animate__bounce  animate__backInUp btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n                                        Clique  para selecionar o seu endereço.\n                                    </button>}\n\n                                    {/* <!-- Modal --> */}\n                                    <div class=\"modal fade \" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                        <div class=\"modal-dialog modal-dialog modal-xl \">\n                                            <div class=\"modal-content modal-dialog modal-xl \">\n                                                <div class=\"modal-header animate__animated animate__bounce  animate__backInUp\"><button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" /></div>\n\n                                                {!value ? true : <h3>Selecione o CEP relacionado ao seu endereço</h3>}\n                                                <div class=\"modal-xxl \">\n                                                    <table class=\"table \">\n                                                        <thead class=\"table \">\n                                                            <tr>\n\n                                                                <th scope=\"col\">#</th>\n                                                                <th scope=\"col\">CEP</th>\n                                                                <th scope=\"col\">Endereço</th>\n                                                                <th scope=\"col\">Bairro </th>\n                                                                <th scope=\"col\"></th>\n\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n\n                                                            {dados.length > 1 && dados.map((item, k) => {\n                                                                return (\n                                                                    <tr>\n\n                                                                        <th scope=\"row\">{k}</th>\n                                                                        <td >{item.cep}</td>\n                                                                        <td >{item.logradouro}</td>\n                                                                        <td >{item.bairro}</td>\n                                                                        <td><button type=\"button\" onClick={() => { return (setDados(item), setValue(false)) }} class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Selecionar</button> </td>\n\n                                                                    </tr>\n                                                                )\n                                                            })}\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                                <div class=\"modal-footer\">\n                                                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </header>\n        </div>\n    )\n        ;\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}